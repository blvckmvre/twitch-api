const users = ["ESL_SC2", "OgamingSC2", "cretetion", "freecodecamp", "storbeck", "habathcx", "RobotCaleb", "noobs2ninjas"];
const url = 'https://twitch-proxy.freecodecamp.rocks/twitch-api/';

const App = () => {
  const [data, setData] = React.useState([]);
  const [sortOnline, setSortOnline] = React.useState(false);
  const fetchData = () => {
    users.forEach(async user=>{
      const res = await axios.all([
        axios.get(url+'streams/'+user),
        axios.get(url+'channels/'+user)
      ]);
      setData(p=>[
        ...p, 
        {...res[0].data.stream, user: res[1].data}
      ]);
    })
  }
  React.useEffect(()=>{
    fetchData()
  },[])
  const sorted = React.useMemo(()=>{
    if(sortOnline)
      return [...data].sort(d=>"channel" in d ? -1 : 1);
    else 
      return [...data];
  },[sortOnline, data]);

  return (
    <div id="app-wrapper">
      <h1 id="title">Twitch streams data</h1>
      <div className="btns-wrapper">
        <button
          className="btn"
          onClick={()=>setSortOnline(true)}
        >Online first</button>
        <button 
          className="btn"
          onClick={()=>setSortOnline(false)}
        >Back to list</button>
      </div>
      {sorted.length ? sorted.map(d=>
        <div 
          key={d.user.name} 
          className={
            "channel" in d ? 
            "user-wrapper online" : 
            "user-wrapper"
          }
         >
          <a 
            className="user-link"
            href={`https://twitch.tv/${d.user.name}`}
            target="_blank"
            rel="noopener"
          >
            <img 
              className="user-logo"
              src={d.user.logo} 
              alt=" "
            />
            {d.user.display_name}
          </a>
          <div className="stream-info">
            {"channel" in d ? d.channel.status : "Offline"}
          </div> 
        </div>
      ) :
        <Loading />
      }
    </div>
  )
}

const Loading = () => {
  return(
    <svg className="load-screen">
      <circle 
        className="load-circle" 
        cx="50%"
        cy="50%"
        r="100"
      />
    </svg>
  )
}

const root = ReactDOM.createRoot(document.getElementById("root"))
root.render(<App />)